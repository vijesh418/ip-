name: 'Add IP to Key Vaults'
description: 'Whitelist IP address in Azure Key Vaults'

inputs:
  user_ip:
    description: 'Public IP address to whitelist'
    required: true
  resource_group:
    description: 'Azure Resource Group name'
    required: true
  azure_credentials:
    description: 'Azure service principal credentials JSON'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ inputs.azure_credentials }}

    - name: Add IP to Key Vaults
      shell: bash
      run: |
        RESOURCE_GROUP="${{ inputs.resource_group }}"
        USER_IP="${{ inputs.user_ip }}"
        
        # Validate IP format
        if ! echo "$USER_IP" | grep -E '^([0-9]{1,3}\.){3}[0-9]{1,3}$' > /dev/null; then
          echo "Error: Invalid IP address format: $USER_IP"
          exit 1
        fi
        
        # Check if resource group exists
        if ! az group show --name "$RESOURCE_GROUP" >/dev/null 2>&1; then
          echo "Resource group $RESOURCE_GROUP not found"
          exit 1
        fi
        
        # Get all key vaults in the resource group
        KEY_VAULTS=$(az keyvault list --resource-group "$RESOURCE_GROUP" --query "[].name" -o tsv)
        if [ -z "$KEY_VAULTS" ]; then
          echo "No Key Vaults found in resource group: $RESOURCE_GROUP"
          exit 0
        fi
        
        echo "Found key vaults: $KEY_VAULTS"
        
        # Add IP to each key vault
        for VAULT in $KEY_VAULTS; do
          echo "Adding IP $USER_IP to Key Vault: $VAULT"
          if az keyvault network-rule add --name "$VAULT" --ip-address "$USER_IP"; then
            echo "Successfully added IP $USER_IP to key vault $VAULT"
          else
            echo "Failed to add IP to key vault $VAULT (may already exist)"
          fi
        done