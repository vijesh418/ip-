name: 'Add IP to Storage Account'
description: 'Whitelist IP address in Azure Storage Account'

inputs:
  user_ip:
    description: 'Public IP address to whitelist'
    required: true
  resource_group:
    description: 'Azure Resource Group name'
    required: true
  storage_account_name:
    description: 'Storage Account name'
    required: true
  azure_credentials:
    description: 'Azure service principal credentials JSON'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ inputs.azure_credentials }}

    - name: Add IP to Storage Account
      shell: bash
      run: |
        RESOURCE_GROUP="${{ inputs.resource_group }}"
        USER_IP="${{ inputs.user_ip }}"
        STORAGE_ACCOUNT="${{ inputs.storage_account_name }}"
        
        # Validate IP format and ranges
        if ! echo "$USER_IP" | grep -E '^([0-9]{1,3}\.){3}[0-9]{1,3}$' > /dev/null; then
          echo "Error: Invalid IP address format: $USER_IP"
          exit 1
        fi
        
        # Validate IP octets are within valid range (0-255)
        IFS='.' read -ra OCTETS <<< "$USER_IP"
        for octet in "${OCTETS[@]}"; do
          if [ "$octet" -gt 255 ] 2>/dev/null || [ "$octet" -lt 0 ] 2>/dev/null; then
            echo "Error: IP address octet out of range (0-255): $USER_IP"
            exit 1
          fi
          # Check if octet is numeric
          if ! [[ "$octet" =~ ^[0-9]+$ ]]; then
            echo "Error: IP address contains non-numeric octet: $USER_IP"
            exit 1
          fi
        done
        
        # Check if storage account exists
        if ! az storage account show --resource-group "$RESOURCE_GROUP" --name "$STORAGE_ACCOUNT" >/dev/null 2>&1; then
          echo "Storage Account $STORAGE_ACCOUNT not found in resource group $RESOURCE_GROUP"
          exit 1
        fi
        
        # Check if IP already exists (handle both with and without /32 suffix)
        EXISTING_IPS=$(az storage account show --resource-group "$RESOURCE_GROUP" --name "$STORAGE_ACCOUNT" --query "networkRuleSet.ipRules[].ipAddressOrRange" -o tsv 2>/dev/null || echo "")
        
        if [ -n "$EXISTING_IPS" ] && (echo "$EXISTING_IPS" | grep -q "^$USER_IP$" || echo "$EXISTING_IPS" | grep -q "^$USER_IP/32$"); then
          echo "Warning: IP $USER_IP already exists in Storage Account: $STORAGE_ACCOUNT"
          echo "No changes needed."
          exit 1
        fi
        
        echo "Adding IP $USER_IP to Storage Account: $STORAGE_ACCOUNT"
        if az storage account network-rule add --resource-group "$RESOURCE_GROUP" --account-name "$STORAGE_ACCOUNT" --ip-address "$USER_IP"; then
          echo "Successfully added IP $USER_IP to storage account $STORAGE_ACCOUNT"
        else
          echo "Failed to add IP to storage account $STORAGE_ACCOUNT"
          exit 1
        fi