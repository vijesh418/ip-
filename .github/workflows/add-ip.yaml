name: Add IP to Azure Resources

on:
  workflow_dispatch:
    inputs:
      user_ip:
        description: 'Your public IP address'
        required: true
      resource_group:
        description: 'Azure Resource Group name'
        required: true
      resource_type:
        description: 'Resource type to whitelist'
        required: true
        type: choice
        options:
          - storage
          - aks
          - keyvault

jobs:
  whitelist-ip:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout ip-logs branch
        uses: actions/checkout@v4
        with:
          ref: ip-logs
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Pull latest ip-logs updates
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull --rebase origin ip-logs || true

      - name: Whitelist IP in Azure Resources
        run: |
          RESOURCE_TYPE="${{ github.event.inputs.resource_type }}"
          RESOURCE_GROUP="${{ github.event.inputs.resource_group }}"
          USER_IP="${{ github.event.inputs.user_ip }}"
          
          case $RESOURCE_TYPE in
            "storage")
              RESOURCES=$(az storage account list --resource-group "$RESOURCE_GROUP" --query "[].name" -o tsv)
              for RESOURCE in $RESOURCES; do
                echo "Adding IP to Storage Account: $RESOURCE"
                az storage account network-rule add --resource-group "$RESOURCE_GROUP" --account-name "$RESOURCE" --ip-address "$USER_IP"
                echo "$USER_IP | $RESOURCE | storage | $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> temp_ips.txt
              done
              ;;
            "aks")
              RESOURCES=$(az aks list --resource-group "$RESOURCE_GROUP" --query "[].name" -o tsv)
              for RESOURCE in $RESOURCES; do
                echo "Adding IP to AKS Cluster: $RESOURCE"
                CURRENT_IPS=$(az aks show --resource-group "$RESOURCE_GROUP" --name "$RESOURCE" --query "apiServerAccessProfile.authorizedIpRanges" -o tsv | tr '\n' ',' | sed 's/,$//')
                if [ -z "$CURRENT_IPS" ]; then
                  NEW_IPS="$USER_IP/32"
                else
                  NEW_IPS="${CURRENT_IPS},$USER_IP/32"
                fi
                az aks update --resource-group "$RESOURCE_GROUP" --name "$RESOURCE" --api-server-authorized-ip-ranges "$NEW_IPS"
                echo "$USER_IP | $RESOURCE | aks | $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> temp_ips.txt
              done
              ;;
            "keyvault")
              RESOURCES=$(az keyvault list --resource-group "$RESOURCE_GROUP" --query "[].name" -o tsv)
              for RESOURCE in $RESOURCES; do
                echo "Adding IP to Key Vault: $RESOURCE"
                az keyvault network-rule add --name "$RESOURCE" --ip-address "$USER_IP"
                echo "$USER_IP | $RESOURCE | keyvault | $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> temp_ips.txt
              done
              ;;
          esac



      - name: Commit and push updated IP log
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add temp_ips.txt
          git commit -m "Whitelisted IP ${{ github.event.inputs.user_ip }} in ${{ github.event.inputs.resource_group }} (${{ github.event.inputs.resource_type }})" || echo "No changes to commit"
          git push origin ip-logs
